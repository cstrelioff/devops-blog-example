SHELL=/bin/bash

# set ip
IP = 104.131.15.134

# directory for ansibleuser ssh key
ssh-dir = ssh

# a default announcement
define ANNOUNCE_BODY

Makefile for ansible and ssh commands.

ssh-root:
  - ssh to the server with root credentials

fingerprint-root:
  - add server fingerprints for inventory to ~/.ssh/known_hosts

ping-root:
  - pings the server with root credentials

create-ansibleuser-key:
  - creates ssh key for ansibleuser

fingerprint-ansibleuser:
  - add server fingerprints for inventory to ~/.ssh/known_hosts

ssh-ansibleuser:
  - ssh to the server with ansibleuser credentials

ping-ansibleuser:
  - pings the server with ansibleuser credentials

server-setup:
  - create ansibleuser user and enable passwordles sudo
  - disable root login with password

server-update:
  - update the server using the ansibleuser account
  - this can be reused to update the server at any time

nginx-setup:
  - install nginx and ufw
  - setup nginx config, create dir, enable site

certbot-certificate:
  - user certbot to create lets encrypt certificate and setup https

web-rsync:
  - sync the website in _site with server
  - this can be reused as the site is changed

endef

export ANNOUNCE_BODY

all:
	@echo "$$ANNOUNCE_BODY"

ssh-root:
	ssh root@${IP}

fingerprint-root:
	ansible-playbook -i inventory_root.ini playbook.yml --tags "fingerprint"

ping-root:
	ansible all -i inventory-root.ini -m ping

create-ansibleuser-key:
	mkdir ssh
	ssh-keygen -t rsa -b 4096 -f ssh/ansible_user

$(ssh-dir):
	@echo "Directory 'ssh' does not exist; creating dir and key"
	mkdir ssh
	ssh-keygen -t rsa -b 4096 -f ssh/ansible_user

fingerprint-ansibleuser: | $(ssh-dir)
	ansible-playbook -i inventory_ansibleuser.ini playbook.yml --tags "fingerprint"

ssh-ansibleuser: | $(ssh-dir)
	ssh -o "IdentitiesOnly=yes" -i ssh/ansible_user ansibleuser@${IP}

ping-ansibleuser: | $(ssh-dir)
	ansible all -i inventory_ansibleuser.ini -m ping

server-setup: | $(ssh-dir)
	ansible-playbook -i inventory_root.ini playbook.yml --tags "setup"
	
server-update: | $(ssh-dir)
	ansible-playbook -i inventory_ansibleuser.ini playbook.yml --tags "update"

nginx-setup: | $(ssh-dir)
	ansible-playbook -i inventory_ansibleuser.ini playbook.yml --tags "nginx_setup"

certbot-certificate: | $(ssh-dir)
	ansible-playbook -i inventory_ansibleuser.ini playbook.yml --tags "certbot"

web-rsync: | $(ssh-dir)
	ansible-playbook -i inventory_ansibleuser.ini playbook.yml --tags "web_rsync"

